{"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["0", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["weight", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzYzMzA1NzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjMzMDU3MjhxAWEuMgAAAAAAAADt7LO9UYlWvl4lir5HZWG+KQWdPWxRerxNqDS+TVGYvk8Cpb2NWxi8I2IKvn/SF75iNBM9sPOKvRG43b1cLJ493y3OPG6HVb20q/09ozEJPY1wwj5ZqkM+DxH9Pb9SUD0ApQ29mjfBPW0TJj6YDgk+aTEQvTJ+ujtW6ke+PPzIPeeeDT0Ak869dIiHPTR9Gb7jh7s9sa06PqMwQ73tWTq+1IIEvnjXgj7p5pU84AI8vkIOTr56r1E+9EjePRWrwLs1zd+99Qf/vA=="}]}]}, 0, {"py/tuple": [2, 1, 5, 5]}, {"py/tuple": [25, 25, 5, 1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}, {"py/tuple": ["bias", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzY2MzMzNzI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjYzMzM3MjhxAWEuAgAAAAAAAACo4zY+9n/8vA=="}]}]}, 0, {"py/tuple": [2]}, {"py/tuple": [1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}]}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "dilation": {"py/tuple": [1, 1]}, "groups": 1, "in_channels": 1, "kernel_size": {"py/tuple": [5, 5]}, "out_channels": 2, "output_padding": {"py/tuple": [0, 0]}, "padding": {"py/tuple": [0, 0]}, "padding_mode": "zeros", "py/object": "torch.nn.modules.conv.Conv2d", "stride": {"py/tuple": [1, 1]}, "training": true, "transposed": false}]}, {"py/tuple": ["1", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "ceil_mode": false, "count_include_pad": true, "divisor_override": null, "kernel_size": 2, "padding": 0, "py/object": "torch.nn.modules.pooling.AvgPool2d", "stride": 2, "training": true}]}, {"py/tuple": ["2", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["weight", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzY2MzI2NDY0cQJYAwAAAGNwdXEDS8hOdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjYzMjY0NjRxAWEuyAAAAAAAAAAzwgq+8gpYPt2II755Qxi8AnxYPpD55701pCU+EdV4Pn+OBz3UiyE+VMkLPrc0QD4ovda997uPviF+Er36PbW+l9GZvrLYvL7XPWO+MzTGvulLr763go87dc0sPibqLz7bIfC92/PGPZRMBL4EvWa+AO4YO5iMBT450Lm9IOWvPOsdJr1SxXE9h2dVPirIK76H2w0+/1WyvQrDnL683cg70XMtPovqCD/t9nI+nVxvvXY7CD5o9vM8RQkwPlXkq768zJ++NBYwvmlWKb4usEC9juBZvH5zmb3dWx8+rjSLveXhOr6wWT2+jlegvkDawr5uKcI9/9c1vuFOgj4voDk+P3d8veEanT2qr9C+hpcDv0K9g77FN9899f8qP/Slzz4nkHk9PfHePI+tPL7ddHu+Su0nPmEDGT47Aou+zIMrPi9HY72D8BM+vTcoPpqntLxeSqQ+oCeXvvYMLL0S4O09Epy6u09FpT31bVW+HCirPuAtIj64Xpq+1UumvUaER74XQJ0+I2kmO1d1Yb7UBdU+bHOrO3sDRr45W3S+asmAvtV3Gb/jppS+vYrqPZh9vz6Nk/U+rwsDP1KeE77LyXu+Ty4pvtT/FDuIfQ8/fqCFvi3t/L3qLza8nM4WPmXIrD4/PnA9o6hSPsph7z2EqIe9ILzDvUOawr53Iu4+ZxDBvcG8wj59fdi9FTvKvkY5Sz66/Pe9iteSPkF8Ab5MghK++cLqPtTJQL7B2As+vHYnvsC0ur2QdJI+FIBqPD7NjD79WBm9SFr8vKR7G75HqSa+AYIJvkL8UT7SFAo9Tg6IPimcAz5Uigq9YRWZPW5FKD7FaWO9BFifvdgYiT2EzzW9pj4XvuPEZb5lUae8wg+4PU0UsbygUUG8jSgGvYnWvb341ve+ubBqvt1ikzxxBgG/W7ykvtnZAr+f6AS+C0DIvsAIlzwN0Lo9Szs1vhocUD0gbxG+hntmPYD8Qj08A+k8TbfLPgNskD1nXyG+Tv6PvYyY2L1wV28+TDpSvCbFuT1oBGK9Y3aIPsNwTj5UAY0+a5Y8PTbqhb0HiCc+h9z5vQ=="}]}]}, 0, {"py/tuple": [4, 2, 5, 5]}, {"py/tuple": [50, 25, 5, 1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}, {"py/tuple": ["bias", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzY2MzI2NzA0cQJYAwAAAGNwdXEDSwROdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjYzMjY3MDRxAWEuBAAAAAAAAACo3xm+npemvIK1eb22wlG+"}]}]}, 0, {"py/tuple": [4]}, {"py/tuple": [1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}]}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "dilation": {"py/tuple": [1, 1]}, "groups": 1, "in_channels": 2, "kernel_size": {"py/tuple": [5, 5]}, "out_channels": 4, "output_padding": {"py/tuple": [0, 0]}, "padding": {"py/tuple": [0, 0]}, "padding_mode": "zeros", "py/object": "torch.nn.modules.conv.Conv2d", "stride": {"py/tuple": [1, 1]}, "training": true, "transposed": false}]}, {"py/tuple": ["3", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "ceil_mode": false, "count_include_pad": true, "divisor_override": null, "kernel_size": 2, "padding": 0, "py/object": "torch.nn.modules.pooling.AvgPool2d", "stride": 2, "training": true}]}, {"py/tuple": ["4", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "end_dim": -1, "py/object": "torch.nn.modules.flatten.Flatten", "start_dim": 1, "training": true}]}, {"py/tuple": ["5", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["weight", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": ""}]}]}, 0, {"py/tuple": [32, 64]}, {"py/tuple": [64, 1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}, {"py/tuple": ["bias", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzY0NTE0NzUycQJYAwAAAGNwdXEDSyBOdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjQ1MTQ3NTJxAWEuIAAAAAAAAAAbvTC+A8Yjv4Ks7D3aVvo9IH28PVqI6rxr70y+akAJP925TT5WVL6+CgePvbOVFL+Zlos+WYKCPlKxfT0etg89bmV3PvY0bD46O4g9tvRovjsl9j5J0I4+/T+zPTWRjj2n6oe+V77jvRCUdbwODSE8kqa9PbywITvKQjy9wyGwPA=="}]}]}, 0, {"py/tuple": [32]}, {"py/tuple": [1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}]}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "in_features": 64, "out_features": 32, "py/object": "torch.nn.modules.linear.Linear", "training": true}]}, {"py/tuple": ["6", {"_backward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_buffers": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_forward_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_load_state_dict_pre_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_modules": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["weight", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "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"}]}]}, 0, {"py/tuple": [10, 32]}, {"py/tuple": [32, 1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}, {"py/tuple": ["bias", {"py/reduce": [{"py/function": "torch._utils._rebuild_parameter"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch._utils._rebuild_tensor_v2"}, {"py/tuple": [{"py/reduce": [{"py/function": "torch.storage._load_from_bytes"}, {"py/tuple": [{"py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDgAAADkzODgwMzY0OTg4NDMycQJYAwAAAGNwdXEDSwpOdHEEUS6AAl1xAFgOAAAAOTM4ODAzNjQ5ODg0MzJxAWEuCgAAAAAAAACr6c2+SPzrviAVlD4a6kI+pi8LvpFw+D6ASVK+IJ3ivZ9QFz5QrRi+"}]}]}, 0, {"py/tuple": [10]}, {"py/tuple": [1]}, false, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}, true, {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}]}]}]}]}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "in_features": 32, "out_features": 10, "py/object": "torch.nn.modules.linear.Linear", "training": true}]}]}]}, "_parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "_state_dict_hooks": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": []}]}, "py/object": "torch.nn.modules.container.Sequential", "training": true}